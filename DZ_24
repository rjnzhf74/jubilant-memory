#include <iostream>
#include <stdlib.h>
#include <string>
         
using namespace std;

bool palindrom(char* c, int l);
int sign_search(string str);

int main() {

    setlocale(LC_ALL, "Rus");

    cout << "\n\tЗадача 3. Создайте функцию, которая принимает строку.";
    cout << "\n\tФункция считает все пробелы, точки, запятые, восклицательные и";
    cout << "\n\tвопросительные знаки, которые есть в переданной строке и";
    cout << "\n\tвозвращает их общее количество.\n";

    string str;
    cout << "\n\tВведите строку: ";
    getline(cin, str);
    
    cout << "\n\tКоличество знаков в строке: " << sign_search(str);

    cout << "\n\n\tЗадача 1 Дана строка str. Пользователь вводит символ";
    cout << "\n\tsym. Программа создаёт новую строку, которая состоит из";
    cout << "\n\tсимвола sym. Длина новой строки равна количеству";
    cout << "\n\tсовпадений введённого символа в изначальной строке str.\n\n";

    string str1 = "Hello world!";
    cout << "\tНаша строка: " << str1 << "\n";
    char sym = 'l';
    int count = 0;
    string res;
    for (int i = 0; i < str1.length(); i++)
        if (str1[i] == sym){
            res += sym;
            count++;
        }
    cout << "\tСимволы: " << res << "   Счётчик символов: " << count << endl;

    cout << "\n\tЗадача 2. Создайте функцию, которая принимает слово и";
    cout << "\n\tвозвращает true, если оно является палиндромом. В";
    cout << "\n\tпротивном случае возвращается false.Функция должна";
    cout << "\n\tбыть нерегистрозависимой.\n\t(Работает только на латинской раскладке.)\n";

    char s[20];
    cout << "\n\tВведите слово: ";
    cin >> s;
    int len = strlen(s);
    cout << "\tРеверс слова:  ";
    for (int i = len; i > -1; i--)
        cout << s[i];

    if (palindrom(s, len) == 1)
        cout << "\n\n\tСлово палиндром.\n\n";
    else cout << "\n\n\tСлово не палиндром.\n\n";

    return 0;
}
bool palindrom(char* c, int l) {
    for (int i = 0; i < l; i++)
        c[i] = tolower(c[i]);
    for (int i = 0, j = l - 1; i < j; i++, j--) {
        if (c[i] == c[j])
            return 1;
        else return 0;
    }
}

int sign_search(string str) {
    int sum = 0;
    for (int i = 0; i < str.size(); i++)
        if (str[i] == ' ' || str[i] == '.' || str[i] == ',' || str[i] == '!' || str[i] == '?')
            sum += 1;
    return sum;
}

    
   
